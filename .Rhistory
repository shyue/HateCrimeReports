curr_column == "ANTI-LGBT" |
curr_column == "ANTI-MALE HOMOSEXUAL (GAY)" |
curr_column == "ANTI-TRANSGENDER") {
#append an observation based on the last row (total row)
for (i in 1:as.numeric(nypd_data_2017[nrow(nypd_data_2017),curr_column])){
nypd_data <- c(nypd_data, "Sexual Orientation")
}
}
#Religion categories
if (curr_column == "ANTI-CATHOLIC" |
curr_column == "ANTI-ISLAMIC" |
curr_column == "ANTI-JEWISH" |
curr_column == "ANTI-MULTI-RELIGIOUS GROUPS" |
curr_column == "ANTI-RELIGIOUS PRACTICE, GENERALLY") {
#append an observation based on the last row (total row)
for (i in 1:as.numeric(nypd_data_2017[nrow(nypd_data_2017),curr_column])){
nypd_data <- c(nypd_data, "Religious Affiliation")
}
}
}
for (curr_column in colnames(nypd_data_2018)){
#Race categories
if (curr_column == "Anti-Arab" |
curr_column == "Anti-Asian" |
curr_column == "Anti-Black" |
curr_column == "Anti-Hispanic" |
curr_column == "Anti-Multi-Racial Groups" |
curr_column == "Anti-Other Ethnicity/National Origin" |
curr_column == "Anti-White") {
#append an observation based on the last row (total row)
for (i in 1:as.numeric(nypd_data_2018[nrow(nypd_data_2018),curr_column])){
nypd_data <- c(nypd_data, "Race")
}
}
#Sexual Orientation categories
if (curr_column == "Anti-Female Homosexual (Lesbian)" |
curr_column == "Anti-Male Homosexual (Gay)" |
curr_column == "Anti-Transgender") {
#append an observation based on the last row (total row)
for (i in 1:as.numeric(nypd_data_2018[nrow(nypd_data_2018),curr_column])){
nypd_data <- c(nypd_data, "Sexual Orientation")
}
}
#Religion categories
if (curr_column == "Anti-Catholic" |
curr_column == "Anti-Islamic (Muslim)" |
curr_column == "Anti-Jewish" |
curr_column == "Anti-Mormon" |
curr_column == "Anti-Other Christian" |
curr_column == "Anti-Other Religion") {
#append an observation based on the last row (total row)
for (i in 1:as.numeric(nypd_data_2018[nrow(nypd_data_2018),curr_column])){
nypd_data <- c(nypd_data, "Religious Affiliation")
}
}
}
nypd_data <- data.frame("Category" = nypd_data)
nRuns <- 2500
sampleSize <- 32
bootPercentCategory <- function(df, bias, size){
bootSample <- sample_n(df, size, replace=TRUE)
return(sum(bootSample$Category==bias)/size)
}
articles_race <- replicate(nRuns, bootPercentCategory(article_data, "Race", sampleSize))
articles_sexualorientation <- replicate(nRuns, bootPercentCategory(article_data, "Sexual Orientation", sampleSize))
articles_religion <- replicate(nRuns, bootPercentCategory(article_data, "Religious Affiliation", sampleSize))
nypd_race <- replicate(nRuns, bootPercentCategory(nypd_data, "Race", sampleSize))
nypd_sexualorientation <- replicate(nRuns, bootPercentCategory(nypd_data, "Sexual Orientation", sampleSize))
nypd_religion <- replicate(nRuns, bootPercentCategory(nypd_data, "Religious Affiliation", sampleSize))
nypd_religion
nypd_race
nypd_sexualorientation
articles_religion
articles_race
articles_sexualorientation
#Libaries
#Load the packages you need here
library(tidyverse)
library(readxl)
#Files
article_data_file <- 'https://raw.githubusercontent.com/googletrends/data/master/Documenting_Hate_latest.csv'
nypd_data_file_2017 <- 'https://raw.githubusercontent.com/shyue/HateCrimeReports/master/nypd2017.csv'
nypd_data_file_2018 <- 'https://raw.githubusercontent.com/shyue/HateCrimeReports/master/nypd2018.csv'
article_data <- read_csv(article_data_file)
nypd_data_2017 <- read_csv(nypd_data_file_2017)
nypd_data_2018 <- read_csv(nypd_data_file_2018)
article_data <- article_data %>%
select(City, Title) %>%
filter(City == "New York")
set.seed(42)
#function for filtering data for category based on keywords
hatecrime_category <- function(title) {
sapply(title, function(title) {
race_words <- c(
'Arab',
'Asian',
'Black',
'Hispanic', 'Latino', 'Latina', 'Mexican',
'Multi-racial', 'Multiracial',
'Native American', 'Native-American',
'White', 'Caucasian',
'race', 'racism', 'racist', 'immigrant'
)
religious_words <- c(
'Catholic',
'Islam', 'Muslim',
'Christian',
'Jewish', 'antisemit',
'religion', 'religious'
)
sexorie_words <- c(
'Lesbian',
'Gay',
#'Transgender',
'Trans',
'LGBTQ',
'queer',
'homo' #'homophobic', 'homophobia',
#'transphobic', 'transphobia'
)
race_count <- 0
religious_count <- 0
sexorie_count <- 0
#counting occurrences
for (word in race_words){
race_count = race_count + str_count(tolower(title), tolower(word))
}
for (word in religious_words){
religious_count = religious_count + str_count(tolower(title), tolower(word))
}
for (word in sexorie_words){
sexorie_count = sexorie_count + str_count(tolower(title), tolower(word))
}
#removing words that are not the maximum number of keywords
type <- c("Race", "Sexual Orientation", "Religious Affiliation")
if (religious_count < race_count | religious_count < sexorie_count) {
type <- type[type != "Religious Affiliation"]
}
if (race_count < religious_count | race_count < sexorie_count) {
type <- type[type != "Race"]
}
if (sexorie_count < religious_count | race_count > sexorie_count) {
type <- type[type != "Sexual Orientation"]
}
if (length(type) == 0 | (sexorie_count==0 & race_count==0 & religious_count==0)){
return("None")
}
#pick random value out of the top (max) choices if there's a tie
return(sample(type,1))
})}
article_data <- article_data %>%
mutate(Category = hatecrime_category(Title)) %>%
filter(Category!="None") %>%
select(-City, -Title)
nypd_data <-c()
for (curr_column in colnames(nypd_data_2017)){
#Race categories
if (curr_column == "ANTI-ARAB" |
curr_column == "ANTI-ASIAN" |
curr_column == "ANTI-BLACK" |
curr_column == "ANTI-HINDU" |
curr_column == "ANTI-HISPANIC" |
curr_column == "ANTI-OTHER ETHNICITY/NATIONAL ORIGIN/ANCESTRY" |
curr_column == "ANTI-WHITE") {
#append an observation based on the last row (total row)
for (i in 1:as.numeric(nypd_data_2017[nrow(nypd_data_2017),curr_column])){
nypd_data <- c(nypd_data, "Race")
}
}
#Sexual Orientation categories
if (curr_column == "ANTI-FEMALE HOMOSEXUAL (LESBIAN)" |
curr_column == "ANTI-LGBT" |
curr_column == "ANTI-MALE HOMOSEXUAL (GAY)" |
curr_column == "ANTI-TRANSGENDER") {
#append an observation based on the last row (total row)
for (i in 1:as.numeric(nypd_data_2017[nrow(nypd_data_2017),curr_column])){
nypd_data <- c(nypd_data, "Sexual Orientation")
}
}
#Religion categories
if (curr_column == "ANTI-CATHOLIC" |
curr_column == "ANTI-ISLAMIC" |
curr_column == "ANTI-JEWISH" |
curr_column == "ANTI-MULTI-RELIGIOUS GROUPS" |
curr_column == "ANTI-RELIGIOUS PRACTICE, GENERALLY") {
#append an observation based on the last row (total row)
for (i in 1:as.numeric(nypd_data_2017[nrow(nypd_data_2017),curr_column])){
nypd_data <- c(nypd_data, "Religious Affiliation")
}
}
}
for (curr_column in colnames(nypd_data_2018)){
#Race categories
if (curr_column == "Anti-Arab" |
curr_column == "Anti-Asian" |
curr_column == "Anti-Black" |
curr_column == "Anti-Hispanic" |
curr_column == "Anti-Multi-Racial Groups" |
curr_column == "Anti-Other Ethnicity/National Origin" |
curr_column == "Anti-White") {
#append an observation based on the last row (total row)
for (i in 1:as.numeric(nypd_data_2018[nrow(nypd_data_2018),curr_column])){
nypd_data <- c(nypd_data, "Race")
}
}
#Sexual Orientation categories
if (curr_column == "Anti-Female Homosexual (Lesbian)" |
curr_column == "Anti-Male Homosexual (Gay)" |
curr_column == "Anti-Transgender") {
#append an observation based on the last row (total row)
for (i in 1:as.numeric(nypd_data_2018[nrow(nypd_data_2018),curr_column])){
nypd_data <- c(nypd_data, "Sexual Orientation")
}
}
#Religion categories
if (curr_column == "Anti-Catholic" |
curr_column == "Anti-Islamic (Muslim)" |
curr_column == "Anti-Jewish" |
curr_column == "Anti-Mormon" |
curr_column == "Anti-Other Christian" |
curr_column == "Anti-Other Religion") {
#append an observation based on the last row (total row)
for (i in 1:as.numeric(nypd_data_2018[nrow(nypd_data_2018),curr_column])){
nypd_data <- c(nypd_data, "Religious Affiliation")
}
}
}
nypd_data <- data.frame("Category" = nypd_data)
nypd_data <- data.frame(table(nypd_data$Category))
article_data <- data.frame(table(article_data$Category))
NYPD_RaceCount <- (nypd_data %>% filter(Var1=='Race'))$Freq
NYPD_SexOriCount <- (nypd_data %>% filter(Var1=='Sexual Orientation'))$Freq
NYPD_ReligionCount <- (nypd_data %>% filter(Var1=='Religious Affiliation'))$Freq
Article_RaceCount <- (article_data %>% filter(Var1=='Race'))$Freq
Article_SexOriCount <- (article_data %>% filter(Var1=='Sexual Orientation'))$Freq
Article_ReligionCount <- (article_data %>% filter(Var1=='Religious Affiliation'))$Freq
#Since we opted for counts of hate crimes, we can't calculate means, std deviatoins, but display the frequencies here:
print("Count of NYPD reports of Race-Based Hate Crimes:")
NYPD_RaceCount
print("Count of NYPD reports of Religion-Based Hate Crimes:")
NYPD_ReligionCount
print("Count of NYPD reports of Sexual Orientation-Based Hate Crimes:")
NYPD_SexOriCount
print("Count of media reports of Race-Based Hate Crimes:")
Article_RaceCount
print("Count of media reports of Religion-Based Hate Crimes:")
Article_ReligionCount
print("Count of media reports of Sexual Orientation-Based Hate Crimes:")
Article_SexOriCount
#Libaries
#Load the packages you need here
library(tidyverse)
library(readxl)
#Files
article_data_file <- 'https://raw.githubusercontent.com/googletrends/data/master/Documenting_Hate_latest.csv'
nypd_data_file_2017 <- 'https://raw.githubusercontent.com/shyue/HateCrimeReports/master/nypd2017.csv'
nypd_data_file_2018 <- 'https://raw.githubusercontent.com/shyue/HateCrimeReports/master/nypd2018.csv'
article_data <- read_csv(article_data_file)
nypd_data_2017 <- read_csv(nypd_data_file_2017)
nypd_data_2018 <- read_csv(nypd_data_file_2018)
article_data <- article_data %>%
select(City, Title) %>%
filter(City == "New York")
set.seed(42)
#function for filtering data for category based on keywords
hatecrime_category <- function(title) {
sapply(title, function(title) {
race_words <- c(
'Arab',
'Asian',
'Black',
'Hispanic', 'Latino', 'Latina', 'Mexican',
'Multi-racial', 'Multiracial',
'Native American', 'Native-American',
'White', 'Caucasian',
'race', 'racism', 'racist', 'immigrant'
)
religious_words <- c(
'Catholic',
'Islam', 'Muslim',
'Christian',
'Jewish', 'antisemit',
'religion', 'religious'
)
sexorie_words <- c(
'Lesbian',
'Gay',
#'Transgender',
'Trans',
'LGBTQ',
'queer',
'homo' #'homophobic', 'homophobia',
#'transphobic', 'transphobia'
)
race_count <- 0
religious_count <- 0
sexorie_count <- 0
#counting occurrences
for (word in race_words){
race_count = race_count + str_count(tolower(title), tolower(word))
}
for (word in religious_words){
religious_count = religious_count + str_count(tolower(title), tolower(word))
}
for (word in sexorie_words){
sexorie_count = sexorie_count + str_count(tolower(title), tolower(word))
}
#removing words that are not the maximum number of keywords
type <- c("Race", "Sexual Orientation", "Religious Affiliation")
if (religious_count < race_count | religious_count < sexorie_count) {
type <- type[type != "Religious Affiliation"]
}
if (race_count < religious_count | race_count < sexorie_count) {
type <- type[type != "Race"]
}
if (sexorie_count < religious_count | race_count > sexorie_count) {
type <- type[type != "Sexual Orientation"]
}
if (length(type) == 0 | (sexorie_count==0 & race_count==0 & religious_count==0)){
return("None")
}
#pick random value out of the top (max) choices if there's a tie
return(sample(type,1))
})}
article_data <- article_data %>%
mutate(Category = hatecrime_category(Title)) %>%
filter(Category!="None") %>%
select(-City, -Title)
nypd_data <-c()
for (curr_column in colnames(nypd_data_2017)){
#Race categories
if (curr_column == "ANTI-ARAB" |
curr_column == "ANTI-ASIAN" |
curr_column == "ANTI-BLACK" |
curr_column == "ANTI-HINDU" |
curr_column == "ANTI-HISPANIC" |
curr_column == "ANTI-OTHER ETHNICITY/NATIONAL ORIGIN/ANCESTRY" |
curr_column == "ANTI-WHITE") {
#append an observation based on the last row (total row)
for (i in 1:as.numeric(nypd_data_2017[nrow(nypd_data_2017),curr_column])){
nypd_data <- c(nypd_data, "Race")
}
}
#Sexual Orientation categories
if (curr_column == "ANTI-FEMALE HOMOSEXUAL (LESBIAN)" |
curr_column == "ANTI-LGBT" |
curr_column == "ANTI-MALE HOMOSEXUAL (GAY)" |
curr_column == "ANTI-TRANSGENDER") {
#append an observation based on the last row (total row)
for (i in 1:as.numeric(nypd_data_2017[nrow(nypd_data_2017),curr_column])){
nypd_data <- c(nypd_data, "Sexual Orientation")
}
}
#Religion categories
if (curr_column == "ANTI-CATHOLIC" |
curr_column == "ANTI-ISLAMIC" |
curr_column == "ANTI-JEWISH" |
curr_column == "ANTI-MULTI-RELIGIOUS GROUPS" |
curr_column == "ANTI-RELIGIOUS PRACTICE, GENERALLY") {
#append an observation based on the last row (total row)
for (i in 1:as.numeric(nypd_data_2017[nrow(nypd_data_2017),curr_column])){
nypd_data <- c(nypd_data, "Religious Affiliation")
}
}
}
for (curr_column in colnames(nypd_data_2018)){
#Race categories
if (curr_column == "Anti-Arab" |
curr_column == "Anti-Asian" |
curr_column == "Anti-Black" |
curr_column == "Anti-Hispanic" |
curr_column == "Anti-Multi-Racial Groups" |
curr_column == "Anti-Other Ethnicity/National Origin" |
curr_column == "Anti-White") {
#append an observation based on the last row (total row)
for (i in 1:as.numeric(nypd_data_2018[nrow(nypd_data_2018),curr_column])){
nypd_data <- c(nypd_data, "Race")
}
}
#Sexual Orientation categories
if (curr_column == "Anti-Female Homosexual (Lesbian)" |
curr_column == "Anti-Male Homosexual (Gay)" |
curr_column == "Anti-Transgender") {
#append an observation based on the last row (total row)
for (i in 1:as.numeric(nypd_data_2018[nrow(nypd_data_2018),curr_column])){
nypd_data <- c(nypd_data, "Sexual Orientation")
}
}
#Religion categories
if (curr_column == "Anti-Catholic" |
curr_column == "Anti-Islamic (Muslim)" |
curr_column == "Anti-Jewish" |
curr_column == "Anti-Mormon" |
curr_column == "Anti-Other Christian" |
curr_column == "Anti-Other Religion") {
#append an observation based on the last row (total row)
for (i in 1:as.numeric(nypd_data_2018[nrow(nypd_data_2018),curr_column])){
nypd_data <- c(nypd_data, "Religious Affiliation")
}
}
}
nypd_data <- data.frame("Category" = nypd_data)
nypd_data <- data.frame(table(nypd_data$Category))
article_data <- data.frame(table(article_data$Category))
NYPD_RaceCount <- (nypd_data %>% filter(Var1=='Race'))$Freq
NYPD_SexOriCount <- (nypd_data %>% filter(Var1=='Sexual Orientation'))$Freq
NYPD_ReligionCount <- (nypd_data %>% filter(Var1=='Religious Affiliation'))$Freq
Article_RaceCount <- (article_data %>% filter(Var1=='Race'))$Freq
Article_SexOriCount <- (article_data %>% filter(Var1=='Sexual Orientation'))$Freq
Article_ReligionCount <- (article_data %>% filter(Var1=='Religious Affiliation'))$Freq
#Since we opted for counts of hate crimes, we can't calculate means, std deviatoins, but display the frequencies here:
print("Count of NYPD reports of Race-Based Hate Crimes:")
NYPD_RaceCount
print("Count of NYPD reports of Religion-Based Hate Crimes:")
NYPD_ReligionCount
print("Count of NYPD reports of Sexual Orientation-Based Hate Crimes:")
NYPD_SexOriCount
print("Count of media reports of Race-Based Hate Crimes:")
Article_RaceCount
print("Count of media reports of Religion-Based Hate Crimes:")
Article_ReligionCount
print("Count of media reports of Sexual Orientation-Based Hate Crimes:")
Article_SexOriCount
#Preparing Counts
Race_HateCrime <- c(Article_RaceCount, NYPD_RaceCount)
Religion_HateCrime <- c(Article_ReligionCount, NYPD_ReligionCount)
SexOri_HateCrime <- c(Article_SexOriCount, NYPD_SexOriCount)
#Creating matrixes for each category
All_matrix = matrix(c(Race_HateCrime, Religion_HateCrime, SexOri_HateCrime), nrow=3, byrow=TRUE)
rownames(All_matrix) = c('Race', 'Religion', 'SexOri')
colnames(All_matrix) = c('Media', 'NYPD')
Race_matrix = matrix(c(Race_HateCrime, Religion_HateCrime+SexOri_HateCrime), nrow=2, byrow=TRUE)
rownames(Race_matrix) = c('Race', 'Other')
colnames(Race_matrix) = c('Media', 'NYPD')
Religion_matrix = matrix(c(Religion_HateCrime, Race_HateCrime+SexOri_HateCrime), nrow=2, byrow=TRUE)
rownames(Religion_matrix) = c('Religion', 'Other')
colnames(Religion_matrix) = c('Media', 'NYPD')
SexOri_matrix = matrix(c(SexOri_HateCrime, Religion_HateCrime+Race_HateCrime), nrow=2, byrow=TRUE)
rownames(SexOri_matrix) = c('SexOri', 'Other')
colnames(SexOri_matrix) = c('Media', 'NYPD')
chisq.test(All_matrix, correct=FALSE)
chisq.test(Race_matrix, correct=FALSE)
chisq.test(Religion_matrix, correct=FALSE)
chisq.test(SexOri_matrix, correct=FALSE)
#Race_matrix
#SexOri_matrix
#Religion_matrix
odds_race_media = Article_RaceCount/(Article_ReligionCount+Article_SexOriCount)
odds_race_nypd = NYPD_RaceCount/(NYPD_ReligionCount+NYPD_SexOriCount)
odds_race = odds_race_media/odds_race_nypd
odds_race
odds_religion_media = Article_ReligionCount/(Article_RaceCount+Article_SexOriCount)
odds_religion_nypd = NYPD_ReligionCount/(NYPD_RaceCount+NYPD_SexOriCount)
odds_religion = odds_religion_media/odds_religion_nypd
odds_religion
odds_sexori_media = Article_SexOriCount/(Article_RaceCount+Article_ReligionCount)
odds_sexori_nypd = NYPD_SexOriCount/(NYPD_RaceCount+NYPD_ReligionCount)
odds_sexori = odds_sexori_media/odds_sexori_nypd
odds_sexori
graph_counts = c(Article_RaceCount, Article_ReligionCount, Article_SexOriCount, NYPD_RaceCount, NYPD_ReligionCount, NYPD_SexOriCount)
graph_hatetype = c('Race', 'Religion', 'Sexual Orientation', 'Race', 'Religion', 'Sexual Orientation')
graph_mediatype = c('Media', 'Media', 'Media', 'NYPD', 'NYPD', 'NYPD')
graph_df <- data.frame(graph_counts, graph_hatetype, graph_mediatype)
graph_df %>%
ggplot() + aes(x=graph_hatetype, y=graph_counts) + geom_bar(aes(fill=graph_mediatype), stat="identity", position="dodge") +
labs(x="Type of Hate Crime", y="Number of reports", title="Media Reports More Race and Sexual Orientation Hate Crimes, \nbut Less Religious Hate Crimes Compared to NYPD Reports", fill="Report Type")
graph_df
test <- graph_df %>%
group_by(graph_mediatype)
test
test <- graph_df %>%
group_by(graph_mediatype) %>%
summarise (n=n()) %>%
mutate(graph_prop = graph_counts/sum(n))
test <- graph_df %>%
group_by(graph_mediatype) %>%
summarise (n=n())
test
test <- graph_df %>%
group_by(graph_mediatype, graph_hatetype) %>%
summarise (n=n())
test
test <- graph_df %>%
group_by(graph_mediatype)
test
test <- graph_df %>%
group_by(graph_mediatype) %>%
mutate(tot=sum(graph_counts))
test
test <- graph_df %>%
group_by(graph_mediatype) %>%
mutate(graph_prop=graph_counts/sum(graph_counts))
test
graph_df <- graph_df %>%
group_by(graph_mediatype) %>%
mutate(graph_prop=graph_counts/sum(graph_counts))
graph_df %>%
ggplot() + aes(x=graph_hatetype, y=graph_prop) + geom_bar(aes(fill=graph_mediatype), stat="identity", position="dodge") +
labs(x="Type of Hate Crime", y="Proportion of reports", title="Media Reports More Proportions of Race and Sexual Orientation Hate Crimes, \nbut Less Proportion of Religious Hate Crimes Compared to NYPD Reports", fill="Report Type")
graph_counts = c(Article_RaceCount, Article_ReligionCount, Article_SexOriCount, NYPD_RaceCount, NYPD_ReligionCount, NYPD_SexOriCount)
graph_hatetype = c('Race', 'Religion', 'Sexual Orientation', 'Race', 'Religion', 'Sexual Orientation')
graph_mediatype = c('Media', 'Media', 'Media', 'NYPD', 'NYPD', 'NYPD')
graph_df <- data.frame(graph_counts, graph_hatetype, graph_mediatype)
graph_df %>%
ggplot() + aes(x=graph_hatetype, y=graph_counts) + geom_bar(aes(fill=graph_mediatype), stat="identity", position="dodge") +
labs(x="Type of Hate Crime", y="Number of reports", title="Media Reports More Counts of Race and Sexual Orientation Hate Crimes, \nbut Less Counts of Religious Hate Crimes Compared to NYPD Reports", fill="Report Type")
graph_df <- graph_df %>%
group_by(graph_mediatype) %>%
mutate(graph_prop=graph_counts/sum(graph_counts))
graph_df %>%
ggplot() + aes(x=graph_hatetype, y=graph_prop) + geom_bar(aes(fill=graph_mediatype), stat="identity", position="dodge") +
labs(x="Type of Hate Crime", y="Proportion of reports (within report type)", title="Media Reports More Proportions of Race and Sexual Orientation Hate Crimes, \nbut Less Proportion of Religious Hate Crimes Compared to NYPD Reports", fill="Report Type")
